# Vetras Validator Node Configuration

[node]
name = "vetras-validator-1"
version = "0.1.0"
environment = "mainnet"  # Options: mainnet, testnet, devnet
log_level = "info"      # Options: debug, info, warn, error

[network]
host = "0.0.0.0"
port = 8090
max_connections = 100
connection_timeout_ms = 5000
handshake_timeout_ms = 3000
peer_sync_interval_ms = 30000

# P2P network configuration
[network.p2p]
enabled = true
listen_address = "0.0.0.0:8091"
external_address = ""  # Public address for other nodes
bootstrap_nodes = [
    "/ip4/1.2.3.4/tcp/8091/p2p/QmBootstrapNode1",
    "/ip4/5.6.7.8/tcp/8091/p2p/QmBootstrapNode2"
]
max_peers = 50
min_peers = 10
peer_discovery_interval_ms = 60000

[blockchain]
rpc_url = "https://api.mainnet-beta.solana.com"
ws_url = "wss://api.mainnet-beta.solana.com"
commitment_level = "finalized"  # Options: processed, confirmed, finalized
retry_attempts = 3
retry_delay_ms = 1000

[validation]
max_concurrent_validations = 5
validation_timeout_ms = 300000  # 5 minutes
min_validation_stake = 100      # Minimum SOL stake required
consensus_threshold = 0.75      # 75% agreement required
max_model_size_mb = 1000       # Maximum model size in MB
result_ttl_seconds = 3600      # How long to keep validation results

# AI model validation settings
[validation.ai]
max_batch_size = 32
compute_precision = "fp16"      # Options: fp16, fp32
default_timeout_ms = 30000
max_memory_mb = 8192
enable_gpu = true
gpu_memory_mb = 4096
fallback_to_cpu = true

# Resource limits for different model types
[validation.resources]
llm_max_memory_mb = 16384
llm_max_gpu_memory_mb = 8192
cv_max_memory_mb = 8192
cv_max_gpu_memory_mb = 4096
max_cpu_threads = 8
max_gpu_utilization = 0.9      # 90% max GPU utilization

[storage]
# IPFS configuration
[storage.ipfs]
enabled = true
api_url = "http://localhost:5001"
gateway_url = "http://localhost:8080"
max_file_size_mb = 1000
connection_timeout_ms = 5000

# Local storage configuration
[storage.local]
path = "/var/lib/vetras/validator"
max_size_gb = 100
cleanup_interval_hours = 24
min_free_space_gb = 10

[metrics]
enabled = true
host = "0.0.0.0"
port = 9090
endpoint = "/metrics"
collection_interval_ms = 10000
export_timeout_ms = 5000

# Prometheus metrics configuration
[metrics.prometheus]
enabled = true
retention_days = 15
scrape_interval_seconds = 15

# Tracing configuration
[telemetry]
enabled = true
jaeger_endpoint = "http://localhost:14268/api/traces"
sampling_rate = 0.1
max_exports_batch_size = 512
max_queue_size = 2048
export_timeout_ms = 30000

[security]
# TLS configuration
[security.tls]
enabled = true
cert_path = "/etc/vetras/certs/validator.crt"
key_path = "/etc/vetras/certs/validator.key"
ca_cert_path = "/etc/vetras/certs/ca.crt"

# Authentication
[security.auth]
api_key_required = true
jwt_secret = ""  # Set via environment variable
token_expiry_hours = 24
max_invalid_attempts = 5
lockout_duration_minutes = 15

# Rate limiting
[security.rate_limit]
enabled = true
requests_per_second = 100
burst_size = 50

[cache]
enabled = true
backend = "redis"  # Options: redis, memory
max_size_mb = 1024
ttl_seconds = 3600

[cache.redis]
url = "redis://localhost:6379"
pool_size = 10
timeout_ms = 1000

# Database configuration
[database]
url = "postgresql://vetras:password@localhost:5432/vetras"
max_connections = 20
min_connections = 5
max_lifetime_seconds = 1800
idle_timeout_seconds = 300
connection_timeout_ms = 3000

# Cleanup and maintenance
[maintenance]
enabled = true
cleanup_interval_hours = 24
max_validation_age_days = 30
backup_enabled = true
backup_interval_hours = 12
backup_retention_days = 30

# Development settings (only used in dev/test environments)
[development]
mock_validations = false
simulation_mode = false
debug_routes_enabled = false
test_accounts = []
