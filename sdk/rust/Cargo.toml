[package]
name = "vetras-sdk"
version = "0.1.0"
edition = "2021"
description = "Rust SDK for VETRAS - Decentralized AI Model Validation Platform"
authors = ["VETRAS Team <sdk@vetras.io>"]
license = "Apache-2.0"
repository = "https://github.com/kevinqiut/vetras-protocol"
documentation = "https://docs.vetras.io"
readme = "README.md"
keywords = ["blockchain", "ai", "validation", "solana", "machine-learning"]
categories = ["cryptography::cryptocurrencies", "api-bindings", "development-tools"]

[dependencies]
# Solana dependencies
solana-sdk = "1.16"
solana-client = "1.16"
solana-program = "1.16"
anchor-client = "0.28"

# Serialization
borsh = "0.10"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Async runtime
tokio = { version = "1.28", features = ["full"] }

# Error handling
thiserror = "1.0"

# Utilities
log = "0.4"
base64 = "0.21"
sha2 = "0.10"
hex = "0.4"
lru = "0.11"

# Optional AI-related dependencies
[dependencies.torch]
version = "0.13"
optional = true

[dependencies.ort]
package = "onnxruntime"
version = "0.0.14"
optional = true

# Feature flags
[features]
default = ["solana"]
solana = []
ai = ["torch", "ort"]
full = ["solana", "ai"]

# Development dependencies
[dev-dependencies]
tokio-test = "0.4"
pretty_assertions = "1.3"
rstest = "0.17"
mockall = "0.11"
tempfile = "3.6"
criterion = "0.5"

[[bench]]
name = "validation"
harness = false

[package.metadata.docs.rs]
features = ["full"]
rustdoc-args = ["--cfg", "docsrs"]

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'
strip = true

[workspace]
members = [
    "examples/*"
]

[package.metadata.release]
sign-commit = true
sign-tag = true
push = true
publish = true
pre-release-commit-message = "Release version {{version}}"
tag-message = "Release version {{version}}"
tag-prefix = "v"
dev-version = true
dev-version-ext = "dev"

[badges]
maintenance = { status = "actively-developed" }
github = { repository = "kevinqiut/vetras-protocol", workflow = "Rust" }